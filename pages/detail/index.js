import React, { Fragment, useEffect, useState } from "react";
import Head from "next/head";
import Navbar from "../../components/Navbar/NavbarDetail";
import Footer from "../../components/footer/Footer";
import Pagination from "../../components/pagination/index";
import style from "../../styles/Detail.module.css";
import Maps from "../../assets/image/detail/location.svg";
import Profile from "../../assets/iconpp.jpg";
import Image from "next/image";
import axios from "axios";
import Link from "next/link";

export async function getServerSideProps() {
  const res = await axios.get(`${process.env.API_BACKEND}worker`);
  return {
    props: { data: res.data.data },
  };
}

const Detail = ({ data }) => {
  console.log(data)
  const [search, setSearch] = useState("");
  const [dataSearch, setDataSearch] = useState([]);
  const [page, setPage] = useState(1);
  const [workerPerPage] = useState(5);

  // console.log(sortBy);
  const handleSearch = (e) => {
    e.preventDefault();
    fetch();
  };
  console.log(search);
  const fetch = async () => {
    const result = await axios.get(
      `${process.env.API_BACKEND}worker?search=${search}`
    );
    setDataSearch(result.data.data);
    // dataSearch.map(item =>{
    console.log(result.data.data);

    // console.log(item)
    // })
  };
  const fetchSort = async (sortBy, sort) => {
    const result = await axios.get(
      `${process.env.API_BACKEND}worker?sorby=${sortBy}&sort=${sort}`
    );
    setDataSearch(result.data.data);
    // dataSearch.map(item =>{
    console.log(result.data.data);

    // console.log(item)
    // })
  };
  // console.log(page + 1)
  const increment = () => {
    if (page == 2) {
      return;
    } else if (page >= 1) {
      setPage(page + 1);
      fetch();
    }
  };
  const decrement = () => {
    if (page <= 1) {
      return;
    } else {
      setPage(page - 1);
      fetch();
    }
  };
  
  useEffect(() => {
    fetch();
  }, [ page]);
  // })
  // console.log(sort);
  console.log(data);
  const indexOfLastPost = page * workerPerPage;
  const indexOfFirstPost = indexOfLastPost - workerPerPage;
  const currentPosts = dataSearch.slice(indexOfFirstPost, indexOfLastPost);

  const paginate = (pageNumber) => setPage(pageNumber);
  return (
    <Fragment>
      <div className="body">
        <Head>
          <title>Hirejob</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/vercel.svg" />
        </Head>
        <Navbar />
        <div className={`${style.bg_top}`}>
          <div className="d-flex">
            <p className="fw-bold text-white mt-3">Top Jobs</p>
          </div>
        </div>
        <div></div>
        <div className={style.mainbody}>
          <div className={style.container}>
            <div className={style.searchbar}>
              <input
                placeholder="Search..."
                onChange={(e) => setSearch(e.target.value)}
              />
              <div
                className={`${style.sort} dropdown d-flex flex-row justify-content-center align-items-center`}
              >
                <button
                  className="btn btn-transparent dropdown-toggle me-4"
                  type="button"
                  id="registerDropdown"
                  data-bs-toggle="dropdown"
                  aria-expanded="false"
                >
                  Sort By
                </button>
                <ul
                  className="dropdown-menu"
                  aria-labelledby="registerDropdown"
                >
                  <li>
                    <a
                      className="dropdown-item"
                      onClick={() => {
                        // setSort("asc");
                        // setSortBy("fullname");
                        fetchSort("fullname", "asc");
                      }}
                    >
                      Name
                    </a>
                  </li>
                  <li>
                    <a
                      className="dropdown-item"
                      onClick={() => {
                        // setSort("asc");
                        // setSortBy("jobs");
                        fetchSort("jobs", "desc");
                      }}
                    >
                      Position
                    </a>
                  </li>
                  <li>
                    <a
                      className="dropdown-item"
                      onClick={() => {
                        // setSort("asc");
                        // setSortBy("skill");
                        fetchSort("skill", "asc");
                      }}
                    >
                      Skill
                    </a>
                  </li>
                  <li>
                    <a
                      className="dropdown-item"
                      onClick={() => {
                        // setSort("asc");
                        // setSortBy("address");
                        fetchSort("address", "desc");
                        // console.log(sortBy)
                      }}
                    >
                      Location
                    </a>
                  </li>
                </ul>
              </div>
              <button onClick={handleSearch}>Search</button>
            </div>
            <div className={style.main}>
              {/* {dataSearch.length > 0 ? 
          dataSearch.map(item =>{
            console.log(item.skill)
            if(item.skill !== undefined){
              return(
                <div className={style.card} key={item.id}>
                <Link href={item.name}>
                    <div className={style.profile}>
                    <Image
                    src={Profile}
                    alt="profile"
                    className={style.profile_img}
                    />
                </div>
                </Link>
              
              <div className={style.profiledetail}>
                <Link href={item.name}>
                <p
                  className="font-weight-bold "
                  style={{ fontSize: "20px", cursor: "pointer" }}
                >
                  {item.name}
                </p>
                
                </Link>
                <p className="text-muted">{item.job}</p>
                <p className="text-muted">
                  <Image src={Maps} alt="location" />
                  <span className="ml-2">{item.address}</span>
                </p>
                <div className={style.skills} >
                {item?.skill?.length > 0 ?
                item?.skill?.map((item, index) =>{
                return(
                      <div className={style.skill} key={index}>{item}</div>
                      )
                    }): "loadding"
                    
                }
                </div>
              </div>
            </div>
  
              )
            }
          }): "loading..."

          } */}
              {search  ? (
                currentPosts?.map((data, index) => {
                    console.log(data.image)
                  return (
                    <div className={style.card} key={index}>
                      {/* <Link href={data.fullname}> */}
                      <div className={style.profile}>
                        <Image
                          src={data.image ? `https://drive.google.com/thumbnail?id=${data.image}&sz=s1080` : Profile}
                          width="100"
                          height="100"
                          alt="profile"
                          className={style.profile_img}
                        />
                      </div>
                      {/* </Link> */}

                      <div className={style.profiledetail}>
                        {/* <Link href={data.name}> */}
                        <p
                          className="font-weight-bold "
                          style={{ fontSize: "20px", cursor: "pointer" }}
                        >
                          {data.fullname}
                        </p>
                        {/* </Link> */}
                        <p className="text-muted">
                          {data.jobs === undefined ? "Unknown" : data.jobs}
                        </p>
                        <p className="text-muted">
                          <Image src={Maps} alt="location" />
                          <span className="ml-2"> {data.address === undefined ? "Unknown" : data.address}</span>
                        </p>
                        <div className={style.skills}>
                          {data.skill?.split(",").map((data, index) => {
                            return (
                              <div className={style.skill} key={index}>
                                {data}
                              </div>
                            );
                          })}
                        </div>
                      </div>
                      <Link href={`detail/${data.id}`}>
                        <div className={`m-auto me-5 `}>
                          <button className={` ${style.btn_seeProfile}`}>
                            Lihat Profile
                          </button>
                        </div>
                      </Link>
                    </div>
                  );
                  // }
                })
              ) : (
                <>
                  {currentPosts?.map((data, index) => {
                    console.log(data.image);
                    // if (data?.skill) {
                    return (
                      <div className={style.card} key={index}>
                        {/* <Link href={data.fullname}> */}
                        <div className={style.profile}>
                          <Image
                            src={data.image ? `https://drive.google.com/thumbnail?id=${data.image}&sz=s1080` : Profile}
                            width="100"
                            height="100"
                            alt="profile"
                            className={style.profile_img}
                          />
                        </div>
                        {/* </Link> */}

                        <div className={style.profiledetail}>
                          {/* <Link href={data.name}> */}
                          <p
                            className="font-weight-bold "
                            style={{ fontSize: "20px", cursor: "pointer" }}
                          >
                            {data.fullname}
                          </p>
                          {/* </Link> */}
                          <p className="text-muted">
                            {data.jobs === undefined ? "Unknown" : data.jobs}
                          </p>
                          <p className="text-muted d-flex ">
                            <Image src={Maps} alt="location" />
                            <span className="ml-2 align-self-center ms-2">{data.address == null ? "Unknown" : data.address}</span>
                          </p>
                          <div className={style.skills}>
                            {data.skill?.split(",").map((data, index) => {
                              return (
                                <div className={style.skill} key={index}>
                                  {data}
                                </div>
                              );
                            })}
                          </div>
                        </div>
                        <Link href={`detail/${data.id}`}>
                          <div className={`m-auto me-5 `}>
                            <button className={` ${style.btn_seeProfile}`}>
                              Lihat Profile
                            </button>
                          </div>
                        </Link>
                      </div>
                    );
                    // }
                  })}
                </>
              )}
            </div>
          </div>
          <div className={style.pagination}>
            <Pagination
              increment={increment}
              decrement={decrement}
              workerPerPage={workerPerPage}
              totalWorker={dataSearch.length}
              paginate={paginate}
            />
          </div>
        </div>
        <Footer />
      </div>
    </Fragment>
  );
};

export default Detail;
